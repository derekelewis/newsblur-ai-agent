name: python-tests

on:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

permissions:
  contents: read
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set up Python
        uses: actions/setup-python@v6
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements-dev.txt

      - name: Run tests with coverage
        run: pytest

      - name: Summarize coverage
        if: always()
        run: |
          python - <<'PY'
          import xml.etree.ElementTree as ET
          import os
          p = 'coverage.xml'
          if not os.path.exists(p):
              print('No coverage.xml found')
              raise SystemExit(0)
          root = ET.parse(p).getroot()
          lines_valid = int(root.attrib.get('lines-valid', 0))
          lines_covered = int(root.attrib.get('lines-covered', 0))
          pct = (lines_covered / lines_valid * 100) if lines_valid else 0.0
          summary = f"Coverage: {pct:.2f}% ({lines_covered}/{lines_valid} lines)"
          print(summary)
          with open(os.environ.get('GITHUB_STEP_SUMMARY', '/dev/null'), 'a') as f:
              f.write("## Test Coverage\n\n")
              f.write(f"- {summary}\n")
          PY

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
